#include<iostream.h>
#include<process.h>
#include<conio.h>
#include<stdlib.h>
#include<math.h>
#include<dos.h>
#include<string.h>
#include<stdio.h>
#include<fstream.h>
#include<graphics.h>
#include<ctype.h>
#include<iomanip.h>

int xx,yy,i,j;
int ypointer=6,xpointer=-3;
int dir=2,alt=1;
int no_of_moves=0;
int loose_points;
int lev;
int highscore=0;
char outwq;
char ci[2];
int ix;

char outan(int n);
float result();
int getpno();
int menu();
int innum(char x);
void outnum();
void outw();
void puzzl(int x,int y,int nx,int ny,char num);
void bigbox(int n);
void welcome();
void mb(int ny,int nx);
void pbox();
void security(char a[33]);
void text();
void rule();
void crossword();

struct clue
{
	int cno;
	char c[200];
	int cl;
	int noc;

};

class puzzle
{

	public:
	char que[13][13];
	char sol[13][13];
	clue across[20],down[20];
	int noac,nodc;

	void getpuzzle();
	void printpuzzle();
	void printvalues();
	puzzle();

	int num;
	int numco[50][2];
};


class colors
{
	palettetype pal;

      public:
	void intro(int style,char text[],int size,int x,int y,int centerise,int bkdisable);

	colors::colors()
	{
		getpalette(&pal);
	}
};

class level
{
    public:
	void load();
	void text();
	void arrow(int aax, int aay);
	int levsel();
	void smartback();
};
class personalize
{
    public:
	char Name[20];
	double Age;
	char Description[200];
	char Password[33];
	double R_score;
	double Timetaken;
	void getuser();
	void readinfo();
	void putuser();
	personalize();
};

puzzle p,x;        //creating global objects
//Timer tim;         //creating global objects
level level;       //creating global objects
personalize user;

personalize::personalize()
{

fstream person("userinfo.txt",ios::binary|ios::in|ios::out|ios::app);

	strcpy(Name,"Default User");
	Age=0;
	strcpy(Description,"Enter your Amazing Qualities Here");
	strcpy(Password,"1234567");
	R_score=0;
}

void personalize::readinfo()
{

fstream person("userinfo.txt",ios::binary|ios::in|ios::out|ios::app);

	while(person)
	{
	  person.read((char*)&user,sizeof(user));
	}
}

void personalize::putuser()
{

fstream person("userinfo.txt",ios::binary|ios::in|ios::out|ios::app);

	readinfo();

	 clearviewport();




	 level.smartback();   //this is just for look no level used

	gotoxy(3,3);
	cout<<"Player Name : ";
	puts(Name);

	gotoxy(3,5);
	cout<<"Player is "<<Age<<" Years old";

	gotoxy(3,7);
	cout<<"About Me : ";
	puts(Description);

	gotoxy(3,9);
	cout<<"Player's Recent Score : "<<R_score;

	gotoxy(3,11);
	cout<<"Player took "<<Timetaken<<" seconds to solve the puzzle" ;

	gotoxy(3,13);
	cout<<"Highscore : "<<Highscore;
	gotoxy(9,23);
	cout<<"Hit 'M' to go to main menu";
	gotoxy(9,21);
	cout<<"Hit 'C' to Personalize";

	char opt;
	opt=getch();

	if(opt=='C'||opt=='c')
	{
		security(Password);
		getuser();
	}

	else if(opt=='M'||opt=='m')
	{
		menu();
	}
	clearviewport();


}

void personalize::getuser()
{
fstream person("userinfo.txt",ios::binary|ios::in|ios::out|ios::app);




	 level.smartback();   //this is just for look no level used

	gotoxy(3,3);
	cout<<"Player Name : ";
	gets(Name);

	gotoxy(3,5);
	cout<<"Your Age :";
	cin>>Age;

	gotoxy(3,7);
	cout<<"About Me : ";
	gets(Description);

	gotoxy(3,11);
	cout<<"Enter Old Password : ";
	char pass[33];
	for(int pas=0;pas<=33;pas++)
	{
	  pass[pas]=getch();

	  if(pass[pas]==13)
		break;

	  gotoxy(24+pas,11);
	  puts("*");
	}
	pass[pas]='\0';
	if(strcmp(pass,Password)==0)
	{
		 gotoxy(3,13);
		 cout<<"Enter New Password : ";
		 for(pas=0;pas<=33;pas++)
		 {
		   pass[pas]=getch();

		   if(pass[pas]==13)
			break;

		   gotoxy(24+pas,13);
		   puts("*");
		}
		pass[pas]='\0';

		strcpy(Password,pass);

		person.write((char*)&user,sizeof(user));


	}
	clearviewport();

}




void colors::intro(int style,char*text,int size,int x,int y,int centerise,int bkdisable)
{
	if(centerise==1)
	{
		settextstyle(style,HORIZ_DIR,size);
		x-=textwidth(text)/2;
		y-=textheight(text)/2;
	}
	if(!kbhit())
	{
		for(int I=0;I<=63;I++)
		{
			if(bkdisable!=1)
				setbkcolor(1);
			setcolor(RED);
			outtextxy(x,y,text);
			setrgbpalette(pal.colors[1],I,I,I);
			delay(25);
		}
	}
}

void level::smartback()
{

	clearviewport();





	  //for small circles
	  setbkcolor(DARKGRAY);
	  int y=getmaxy()/2;
	  setcolor(BLUE);
	  circle(3,y,3);
	  circle(3,y,2);
	  int x=getmaxx()-3;
	  circle(x,y,3);
	  circle(x,y,2);


	  //for all lines
	   x=4;y=3;int x1=getmaxx()-4;int y1=getmaxy();

	  setcolor(BLUE);
	  line(x-2,y,x1+2,y);     //up up st
	  line(x,y+3,x1,y+3);     //up down st
	  line(x1+2,3,x1+2,y1/2-6); //up right right
	  line(x1,6,x1,y1/2-6);   //up right left
	  line(x-2,3,x-2,y1/2-6); //up left left
	  line(x,6,x,y1/2-6);  //up left right
	  line(2,y1/2+6,2,y1-4); //down left left
	  line(4,y1/2+6,4,y1-7); //down left right
	  line(2,y1-4,x1+1,y1-4);//down down st
	  line(5,y1-7,x1-1,y1-7); //down up st
	  line(x1+2,y1/2+6,x1+2,y1-4); //down right right
	  line(x1,y1/2+6,x1,y1-7); //down right left



}

void level::text()
{
	setcolor(BROWN);
	settextstyle(TRIPLEX_FONT, HORIZ_DIR, 10);
	outtextxy(60-15,160,"M");
	settextstyle(TRIPLEX_FONT, HORIZ_DIR, 7);
	outtextxy(200-60-15,220,"edium");

	setcolor(GREEN);
	settextstyle(GOTHIC_FONT, HORIZ_DIR, 10);
	outtextxy(80, 10,"E");
	settextstyle(TRIPLEX_FONT, HORIZ_DIR, 7);
	outtextxy(180-20,110-40,"asy");

	setcolor(RED);
	settextstyle(GOTHIC_FONT, HORIZ_DIR, 10);
	outtextxy(85,300 ,"H");
	settextstyle(TRIPLEX_FONT, HORIZ_DIR, 7);
	outtextxy(165,350,"ard");

}

void level::arrow(int aax,int aay)
{
	line(aax,aay,aax+150,aay);
	line(aax,aay,aax+15,aay-10);
	line(aax+4,aay,aax+17+2,aay-10);
	line(aax+15,aay-10,aax+19,aay-10);
	line(aax,aay,aax+15,aay+10);
	line(aax+4,aay,aax+19,aay+10);
	line(aax+15,aay+10,aax+19,aay+10);
}


int level::levsel()//level select
{
   clearviewport();
	smartback();
	text();
	char a;
	int ret=1;

	   setcolor(DARKGRAY);
	   arrow(370,270);
	   setcolor(WHITE);
	   arrow(370,120);
	   ret=1;

	for(;;)
	{
	 int ii;

	 if (ii>3)
	   ii=1;

	 a=getch();

	 if(a==13)
	    break;

	 if(ii==1)
	 {
	   setcolor(DARKGRAY);
	   arrow(370,390);
	   setcolor(WHITE);
	   arrow(370,270);
	   ret=2;
	 }

	 else if(ii==2)
	 {
	   setcolor(DARKGRAY);
	   arrow(370,270);
	   setcolor(WHITE);
	   arrow(370,120);
	   ret=1;
	 }

	 else if(ii==3)
	 {
	   setcolor(DARKGRAY);
	   arrow(370,120);
	   setcolor(WHITE);
	   arrow(370,390);
	   ret=3;
	 }

	 ii++;
	}

	return ret;
}

puzzle::puzzle()
{
       num=0;
       for(i=0;i<2;i++)
	 for(j=0;j<50;j++)
	     numco[j][i]=0;
       for(i=0;i<13;i++)
       {
	     for(j=0;j<13;j++)
	     {
		  que[i][j]='1';
		  sol[i][j]='1';
	     }
	     across[i].cno=0;down[i].cno=0;
	     across[i].cl=0;down[i].cl=0;
	     across[i].noc=0;down[i].noc=0;
	     across[i].c[i]='0';down[i].c[i]='0';

       }
       nodc=0;
       noac=0;
}

void puzzle::printvalues()
{
		int ny=1;

		for(j=0;j<13;j++)
		{
			int nx=1;

			for(i=0;i<13;i++)
			{
				outwq=que[i][j];

				if(que[i][j]=='0')
				{
					mb(j+1,i+1);
					nx++;
				}

				else
				{
				outw();
				outtextxy(xx-12+nx*24,yy-12+ny*24,ci);
				nx++;
				}
			}
			ny++;
		}


}

void puzzle::getpuzzle()
{
	closegraph();
	 int gd = DETECT, gm, errorcod;
	 initgraph(&gd, &gm, "C:\\turboc3\\bgi");
	int lev=level.levsel();
	closegraph();
	 int gdriver = DETECT, gmode, errorcode;
	 initgraph(&gdriver, &gmode, "C:\\turboc3\\bgi");



	puzzl(160,70,13,13,'n');

	for(i=0;i<13;i++)
	{
		for(j=0;j<13;j++)
		{

			//start pointer      .
			setcolor(WHITE);
			outtextxy((xx-12+(i+1)*24)+xpointer,(yy-12+(j+1)*24)+ypointer,"-");

			que[i][j]=getch();
			if(que[i][j]==13)
			 exit(0);

			if(que[i][j]!=80&&que[i][j]!=75&&que[i][j]!=77&&que[i][j]!=72)
				que[i][j]=tolower(que[i][j]);


			if(que[i][j]==80)
			{
			    setcolor(BLACK);
			    outtextxy((xx-12+(i+1)*24)+xpointer,(yy-12+(j+1)*24)+ypointer,"-");

			    if(j>13)
			       i--;
			}

			else if(que[i][j]==77)
			{
				 setcolor(BLACK);
				 outtextxy((xx-12+(i+1)*24)+xpointer,(yy-12+(j+1)*24)+ypointer,"-");
				 i++;
				 j--;

				 if(i>12)
				   i=0;
			}

			else if(que[i][j]==75)
			{

			    setcolor(BLACK);
			    outtextxy((xx-12+(i+1)*24)+xpointer,(yy-12+(j+1)*24)+ypointer,"-");
			    i--;
			    j--;

			    if(i+1<1)
			       i=12;
			}

			else if(que[i][j]==72)
			{
			    setcolor(BLACK);
			    outtextxy((xx-12+(i+1)*24)+xpointer,(yy-12+(j+1)*24)+ypointer,"-");

			   j-=2;
			   if(j<=-2)
				j=11;
			}

		//entering letters
		else if((que[i][j]>='a')&&(que[i][j]<='z'))
		{
			 int dx=i;
			 outwq='l';
			 outw();
			 setcolor(BLACK);

			 for(dx=-3;dx<=5;dx++)
			 {
				 outtextxy((xx-12+(i+1)*24)-dx,yy-12+(j+1)*24,ci);
				 outtextxy((xx-12+(i+1)*24)-dx,(yy-12+(j+1)*24)+2,ci);
			 }

			 outwq=que[i][j];
			 outw();
			 setcolor(WHITE);
			 outtextxy(xx-12+(i+1)*24,yy-12+(j+1)*24,ci);
			 setcolor(BLACK);
			 outtextxy((xx-12+(i+1)*24)+xpointer,(yy-12+(j+1)*24)+ypointer,"-");

		}

			else
			{
				for(int ai=0;ai<13;ai++)
				{
					for(int aj=0;aj<13;aj++)
					{
						outwq=que[ai][aj];
						if(que[ai][aj]=='0')
						mb(aj+1,ai+1);
						setcolor(WHITE);
					}

				}
			}

		}

	}


	   //saving

	 fstream f;
	 if(lev==1)
	 f.open("cdatae.txt",ios::binary|ios::app|ios::in|ios::out);
	 if(lev==2)
	 f.open("cdatam.txt",ios::binary|ios::app|ios::in|ios::out);
	 if(lev==3)
	 f.open("cdatah.txt",ios::binary|ios::app|ios::in|ios::out);



	   for(i=0;i<13;i++)
	     for(j=0;j<13;j++)
	       f<<que[i][j];


	clearviewport();
	setbkcolor(BLACK);
	getch();
	puzzl(100,100,13,13,'n');
	printvalues();
	getch();
	clearviewport();

	gotoxy(18,15);
	cout<<"Enter number of across clues : ";
	cin>>noac;
	f<<outan(p.noac);

	clearviewport();
	bigbox(5);
	setbkcolor(BLACK);

	int noaac=noac;

		for(i=0;i<noac;i++)
		{
			int wc=1;
			clearviewport();
			bigbox(5);
			setbkcolor(BLACK);

			if(i!=0)
				 {
					gotoxy(15,5);
					cout<<"Previous :- ";
					gotoxy(20,7);
					cout<<"Enter clue number: "<<across[i-1].cno;
					gotoxy(20,8);
					cout<<"Enter the clue: "<<across[i-1].c;
					gotoxy(20,9);
					cout<<"Enter the number of characters in answer: "<<across[i-1].noc;

				 }


			while(wc==1)
			{

				 char wrongcheck[40];


					//bigbox(5);
					setbkcolor(BLACK);


				 gotoxy(15,11);
				 cout<<"Current:- ";

				 gotoxy(20,13);
				 cout<<"Enter clue number:";
				 gets(wrongcheck);

				 if(strcmp(wrongcheck,"1")==0||strcmp(wrongcheck,"2")==0||strcmp(wrongcheck,"3")==0||strcmp(wrongcheck,"4")==0||strcmp(wrongcheck,"5")==0||strcmp(wrongcheck,"6")==0||strcmp(wrongcheck,"7")==0||strcmp(wrongcheck,"8")==0||strcmp(wrongcheck,"9")==0||strcmp(wrongcheck,"10")==0||strcmp(wrongcheck,"11")==0||strcmp(wrongcheck,"12")==0||strcmp(wrongcheck,"13")==0||strcmp(wrongcheck,"14")==0||strcmp(wrongcheck,"15")==0||strcmp(wrongcheck,"16")==0||strcmp(wrongcheck,"17")==0||strcmp(wrongcheck,"18")==0||strcmp(wrongcheck,"19")==0||strcmp(wrongcheck,"20")==0||strcmp(wrongcheck,"21")==0||strcmp(wrongcheck,"22")==0||strcmp(wrongcheck,"23")==0||strcmp(wrongcheck,"24")==0||strcmp(wrongcheck,"25")==0||strcmp(wrongcheck,"26")==0||strcmp(wrongcheck,"27")==0||strcmp(wrongcheck,"28")==0||strcmp(wrongcheck,"29")==0||strcmp(wrongcheck,"30")==0||strcmp(wrongcheck,"31")==0||strcmp(wrongcheck,"32")==0
				 ||strcmp(wrongcheck,"33")==0||strcmp(wrongcheck,"34")==0||strcmp(wrongcheck,"35")==0||strcmp(wrongcheck,"36")==0||strcmp(wrongcheck,"37")==0||strcmp(wrongcheck,"38")==0||strcmp(wrongcheck,"39")==0||strcmp(wrongcheck,"40")==0||strcmp(wrongcheck,"41")==0||strcmp(wrongcheck,"42")==0||strcmp(wrongcheck,"43")==0||strcmp(wrongcheck,"44")==0||strcmp(wrongcheck,"45")==0||strcmp(wrongcheck,"46")==0||strcmp(wrongcheck,"47")==0||strcmp(wrongcheck,"48")==0||strcmp(wrongcheck,"49")==0||strcmp(wrongcheck,"50")==0)
				 {
				   across[i].cno=atoi(wrongcheck);
				   wc=2;
				 }
				 else
				 {
					 gotoxy(20,20);
					 cout<<"Wrong Entry!!!";
					 sound(3000);
					 delay(700);
					 nosound();
				 clearviewport();
				 getch();
			 }
		}

			if(num<across[i].cno)
			num=across[i].cno;
			gotoxy(20,14);
			cout<<"Enter the clue:";
			gets(across[i].c);
			across[i].cl=strlen(across[i].c);
			gotoxy(20,15);
			cout<<"Enter the number of characters in answer:";
			cin>>across[i].noc;
			noac=noaac;

		}

		for(i=0;i<noac;i++)
		{
			  f<<outan(across[i].cno);
			  f<<outan(across[i].noc);
			  f<<outan(across[i].cl);
			  f<<across[i].c;
		}

	clearviewport();
	gotoxy(1,1);
	cout<<"\nEnter number of down clues";
	cin>>nodc;
	f<<outan(p.nodc);
	clrscr();

	int noddc=nodc;

	for(i=0;i<nodc;i++)
	{
		int wc=1;

		clearviewport();
		bigbox(5);
		setbkcolor(BLACK);

		if(i!=0)
			 {
				gotoxy(15,5);
				cout<<"Previous :- ";
				gotoxy(20,7);
				cout<<"Enter clue number: "<<down[i-1].cno;
				gotoxy(20,8);
				cout<<"Enter the clue: "<<down[i-1].c;
				gotoxy(20,9);
				cout<<"Enter the number of characters in answer: "<<down[i-1].noc;
			 }


		while(wc==1)
		{
			 char wrongcheck[40];


			bigbox(5);
			setbkcolor(BLACK);


			 gotoxy(15,11);
			 cout<<"Current:- ";

			 gotoxy(20,13);
			 cout<<"Enter clue number:";
			 gets(wrongcheck);

			 if(strcmp(wrongcheck,"1")==0||strcmp(wrongcheck,"2")==0||strcmp(wrongcheck,"3")==0||strcmp(wrongcheck,"4")==0||strcmp(wrongcheck,"5")==0||strcmp(wrongcheck,"6")==0||strcmp(wrongcheck,"7")==0||strcmp(wrongcheck,"8")==0||strcmp(wrongcheck,"9")==0||strcmp(wrongcheck,"10")==0||strcmp(wrongcheck,"11")==0||strcmp(wrongcheck,"12")==0||strcmp(wrongcheck,"13")==0||strcmp(wrongcheck,"14")==0||strcmp(wrongcheck,"15")==0||strcmp(wrongcheck,"16")==0||strcmp(wrongcheck,"17")==0||strcmp(wrongcheck,"18")==0||strcmp(wrongcheck,"19")==0||strcmp(wrongcheck,"20")==0||strcmp(wrongcheck,"21")==0||strcmp(wrongcheck,"22")==0||strcmp(wrongcheck,"23")==0||strcmp(wrongcheck,"24")==0||strcmp(wrongcheck,"25")==0||strcmp(wrongcheck,"26")==0||strcmp(wrongcheck,"27")==0||strcmp(wrongcheck,"28")==0||strcmp(wrongcheck,"29")==0||strcmp(wrongcheck,"30")==0||strcmp(wrongcheck,"31")==0||strcmp(wrongcheck,"32")==0
			 ||strcmp(wrongcheck,"33")==0||strcmp(wrongcheck,"34")==0||strcmp(wrongcheck,"35")==0||strcmp(wrongcheck,"36")==0||strcmp(wrongcheck,"37")==0||strcmp(wrongcheck,"38")==0||strcmp(wrongcheck,"39")==0||strcmp(wrongcheck,"40")==0||strcmp(wrongcheck,"41")==0||strcmp(wrongcheck,"42")==0||strcmp(wrongcheck,"43")==0||strcmp(wrongcheck,"44")==0||strcmp(wrongcheck,"45")==0||strcmp(wrongcheck,"46")==0||strcmp(wrongcheck,"47")==0||strcmp(wrongcheck,"48")==0||strcmp(wrongcheck,"49")==0||strcmp(wrongcheck,"50")==0)
			 {
			   down[i].cno=atoi(wrongcheck);
			   wc=2;
			 }
			 else
			 {
				 gotoxy(20,20);
				 cout<<"Wrong Entry!!!";
				 sound(3000);
				 delay(700);
				 nosound();
				 clearviewport();
				 getch();
			 }
		}

			if(num<down[i].cno)
			num=down[i].cno;
			gotoxy(20,14);
			cout<<"Enter the clue:";
			gets(down[i].c);
			down[i].cl=strlen(down[i].c);
			gotoxy(20,15);
			cout<<"Enter the number of characters in answer:";
			cin>>down[i].noc;
			nodc=noddc;

	}

	for(i=0;i<p.nodc;i++)
	{
	   f<<outan(down[i].cno);
	   f<<outan(down[i].noc);
	   f<<outan(down[i].cl);
	   f<<down[i].c;
	}

	   f<<outan(p.num);

	clearviewport();
	int temp=num;

	for(i=1;i<=temp;i++)
	{
	   clrscr();
	   cout<<"Enter x-co-ordinate of "<<i;
	   cin>>numco[i][0];
	   cout<<"Enter y-co-ordinate of "<<i;
	   cin>>numco[i][1];
	}

	for(i=1;i<=num;i++)
	{
	     f<<outan(numco[i][0]);
	     f<<outan(numco[i][1]);
	}

	 f<<'|';
	 f.close();



	 getch();

}


void puzzle::printpuzzle()
{

closegraph();
	 int gdriver = DETECT, gmode, errorcode;
	 initgraph(&gdriver, &gmode, "C:\\turboc3\\bgi");

	clearviewport();
	clearviewport();




	rectangle(155,7,475,60);
	rectangle(155,getmaxy()-7-4,475,getmaxy()-80-4);
	rectangle(157,getmaxy()-9-4,473,getmaxy()-78-4);


	int xaxis=12;
	int yaxis=33;

	for(i=0;i<noac;i++)
	{
		setcolor(WHITE);
		ix=across[i].cno;
		outnum();
		outtextxy(xaxis,yaxis,ci);
		int add;

		if(ix<10)
		  add=7;
		else
		  add=14;

		outtextxy(xaxis+add,yaxis,".");

		char cluecros[35];

		for(int cross=0;cross<14;cross++)
		   cluecros[cross]=across[i].c[cross];

		cluecros[cross]='\0';

		outtextxy(xaxis+add+7,yaxis,cluecros);

		if(across[i].cl>14)
		{
		   yaxis=yaxis+10;

		   for(int cross=14;cross<across[i].cl;cross++)
		      cluecros[cross-14]=across[i].c[cross];

		   for(cross=across[i].cl;cross<49;cross++)
		      cluecros[cross-14]=' ';


		   outtextxy(xaxis+add+7,yaxis,cluecros);
		}

	yaxis=yaxis+9;

	setcolor(RED);
	outtextxy(13,yaxis,"----------------");
	yaxis+=9;

	}

	xaxis=487;
	yaxis=33;


	for(i=0;i<nodc;i++)
	{

		setcolor(WHITE);
		//settextstyle(TRIPLEX_FONT,HORIZ_DIR,1);
		ix=down[i].cno;
		outnum();
		outtextxy(xaxis,yaxis,ci);
		int add;

		if(ix<10)
		   add=7;
		else
		   add=14;

		outtextxy(xaxis+add,yaxis,".");

		char cluecros[34];

		for(int cross=0;cross<14;cross++)
		   cluecros[cross]=down[i].c[cross];

		cluecros[cross]='\0';

		outtextxy(xaxis+add+7,yaxis,cluecros);

		if(down[i].cl>14)
		{
		   yaxis=yaxis+10;

		   for(int cross=14;cross<down[i].cl;cross++)
		      cluecros[cross-14]=down[i].c[cross];

		   for(cross=down[i].cl;cross<48;cross++)
		      cluecros[cross-14]=' ';


		   outtextxy(xaxis+add+7,yaxis,cluecros);
		}

		yaxis=yaxis+9;

		setcolor(RED);
		outtextxy(490,yaxis,"-----------------");
		yaxis+=9;

	}

	setcolor(WHITE);
	outtextxy(185,getmaxy()-65-1,"You Are Entering A");
	outtextxy(155-7,getmaxy()-45-1,"  No of times You moved Your Cursor :");

	if(dir%2==0)
	{

		alt=1;
		setcolor(BLACK);
		outtextxy(185+144,getmaxy()-65-1,"n Across Clue");
		setcolor(WHITE);
		outtextxy(185+140,getmaxy()-65-1," Down Clue");

	}

	else
	{

		alt=2;
		setcolor(BLACK);
		outtextxy(185+140,getmaxy()-65-1," Down Clue");
		setcolor(WHITE);
		outtextxy(185+144,getmaxy()-65-1,"n Across Clue");
	}

	puzzl(160,70,13,13,'n');


	pbox();
	int nx,ny;

	for(int i=0;i<13;i++)
	{
		nx=1;
		for(int j=0;j<13;j++)
		{
			outwq=que[i][j];
			if(que[i][j]=='0')
			{
			mb(j+1,i+1);
			nx++;
			}

		}
		ny++;
	}

	for(i=1;i<=num;i++)
	{
		ix=i;
		outnum();
		outtextxy((xx-3+numco[i][1]*24)-19,(yy-3+numco[i][0]*24)-17,ci);
	}


	int exitloop=1;//for exiting loop hitting enter

	setcolor(WHITE);
	outtextxy(455-7,434,"0");

	for(i=0;;i++)
	{
		if(i>12)
		   i=0;

		for(j=0;j<13;j++)
		{
			if(i>12)
			  i=0;

			//start pointer

			setcolor(WHITE);

			if(que[i][j]=='0')
			  setcolor(BLACK);


			outtextxy((xx-12+(i+1)*24)+xpointer,(yy-12+(j+1)*24)+ypointer,"-");

			char check=getch();

			ix=no_of_moves;
			outnum();
			setcolor(BLACK);
			outtextxy(455-7,434,ci);
			setcolor(WHITE);

			if(check!=80&&check!=75&&check!=77&&check!=72)
				check=tolower(check);

			if(check==80||check==75||check==77||check==72)
				no_of_moves++;

			ix=no_of_moves;
			outnum();
			outtextxy(455-7,434,ci);

			//tim.start();


			if(check==13)
			{
				exitloop=2;
				//tim.stop();
				break;
			}


			if(check==80)
			{
			    setcolor(BLACK);
			    outtextxy((xx-12+(i+1)*24)+xpointer,(yy-12+(j+1)*24)+ypointer,"-");

			    if(j>13)i--;
			}

			else if(check==77)
			{
			    setcolor(BLACK);
			    outtextxy((xx-12+(i+1)*24)+xpointer,(yy-12+(j+1)*24)+ypointer,"-");
			    i++;
			    j--;

			    if(i>12)
			    {
				    i=0;
			    }
			}

			else if(check==75)
			{

			    setcolor(BLACK);
			    outtextxy((xx-12+(i+1)*24)+xpointer,(yy-12+(j+1)*24)+ypointer,"-");
			    i--;
			    j--;

			    if(i+1<1)
			    {
				i=12;
			    }
			}

			else if(check==72)
			{
			    setcolor(BLACK);
			    outtextxy((xx-12+(i+1)*24)+xpointer,(yy-12+(j+1)*24)+ypointer,"-");

			    j-=2;

			    if(j<=-2)
			    {
				j=11;
			    }
			}

			//entering letters
			else if(check=='5')
			{
				dir++;
				setcolor(WHITE);
				outtextxy(185,getmaxy()-65-1,"You Are Entering A");

				if(dir%2==0)
				{
					alt=1;
					setcolor(BLACK);
					outtextxy(185+144,getmaxy()-65-1,"n Across Clue");
					setcolor(WHITE);
					outtextxy(185+140,getmaxy()-65-1," Down Clue");
				}

				else
				{
					alt=2;
					setcolor(BLACK);
					outtextxy(185+140,getmaxy()-65-1," Down Clue");
					setcolor(WHITE);
					outtextxy(185+144,getmaxy()-65-1,"n Across Clue");
				}
			}

			else if((check>='a')&&(check<='z'))
			{
				 sol[i][j]=check;
				 int dx=i;

				 outwq='l';
				 outw();

				 setcolor(BLACK);

				 for(dx=-3;dx<=5;dx++)
				 {
					 outtextxy((xx-12+(i+1)*24)-dx,yy-12+(j+1)*24,ci);
					 outtextxy((xx-12+(i+1)*24)-dx,(yy-12+(j+1)*24)+2,ci);
				 }

				 outwq=sol[i][j];
				 outw();

				 setcolor(WHITE);
				 outtextxy(xx-12+(i+1)*24,yy-12+(j+1)*24,ci);
				 setcolor(BLACK);
				 outtextxy((xx-12+(i+1)*24)+xpointer,(yy-12+(j+1)*24)+ypointer,"-");


				 if(alt==2)
				 {
				  j--;
				  i++;
				 }
			}

			//unwanted values
			else
			{
				j--;
			}

			if(check=='5')
			{
				j--;
			}

			//block pointer blacked area
			for(int aj=0;aj<13;aj++)
			{

				for(int ai=0;ai<13;ai++)
				{

					if(que[aj][ai]=='0')
					{
					mb(ai+1,aj+1);
				//	setcolor(WHITE);
				//	outtextxy((xx-12+(i+1)*24)+xpointer,(yy-12+(j+1)*24)+ypointer,"-");
					}

				}

			}
		}

		 if(exitloop==2)
		      break;
	}

}

void outw()
{
	if(outwq=='a')strcpy(ci,"a");else if(outwq=='b')strcpy(ci,"b");else if(outwq=='c')strcpy(ci,"c");else if(outwq=='d')strcpy(ci,"d");else if(outwq=='e')strcpy(ci,"e");
	else if(outwq=='f')strcpy(ci,"f");else if(outwq=='g')strcpy(ci,"g");else if(outwq=='h')strcpy(ci,"h");else if(outwq=='i')strcpy(ci,"i");else if(outwq=='j')strcpy(ci,"j");
	else if(outwq=='k')strcpy(ci,"k");else if(outwq=='l')strcpy(ci,"l");else if(outwq=='m')strcpy(ci,"m");else if(outwq=='n')strcpy(ci,"n");else if(outwq=='o')strcpy(ci,"o");
	else if(outwq=='p')strcpy(ci,"p");else if(outwq=='q')strcpy(ci,"q");else if(outwq=='r')strcpy(ci,"r");else if(outwq=='s')strcpy(ci,"s");else if(outwq=='t')strcpy(ci,"t");
	else if(outwq=='u')strcpy(ci,"u");else if(outwq=='v')strcpy(ci,"v");else if(outwq=='w')strcpy(ci,"w");else if(outwq=='x')strcpy(ci,"x");else if(outwq=='y')strcpy(ci,"y");
	else if(outwq=='z')strcpy(ci,"z");else if(outwq=='A')strcpy(ci,"A");else if(outwq=='B')strcpy(ci,"B");else if(outwq=='C')strcpy(ci,"C");else if(outwq=='D')strcpy(ci,"D");
	else if(outwq=='E')strcpy(ci,"E");else if(outwq=='F')strcpy(ci,"F");else if(outwq=='G')strcpy(ci,"G");else if(outwq=='H')strcpy(ci,"H");else if(outwq=='I')strcpy(ci,"I");
	else if(outwq=='J')strcpy(ci,"J");else if(outwq=='K')strcpy(ci,"K");else if(outwq=='L')strcpy(ci,"L");else if(outwq=='M')strcpy(ci,"M");else if(outwq=='N')strcpy(ci,"N");
	else if(outwq=='O')strcpy(ci,"O");else if(outwq=='P')strcpy(ci,"P");else if(outwq=='Q')strcpy(ci,"Q");else if(outwq=='R')strcpy(ci,"R");else if(outwq=='S')strcpy(ci,"S");
	else if(outwq=='T')strcpy(ci,"T");else if(outwq=='U')strcpy(ci,"U");else if(outwq=='V')strcpy(ci,"V");else if(outwq=='W')strcpy(ci,"W");else if(outwq=='X')strcpy(ci,"X");
	else if(outwq=='Y')strcpy(ci,"Y");else strcpy(ci,"Z");
}

int innum(char n)
{
	int x;
	x=n;
	return x+128;
}

char outan(int n)
{
	char x;
	x=n+128;
	return x;
}
//DRAWS THE PUZZLE
void puzzl(int x,int y,int nx,int ny,char num='n')
{
	setcolor(WHITE);
	xx=x;
	yy=y;

	//numbers
	if(num=='y')
	{
	     for(int k=1;k<=nx;k++,x+=24)
	     {
		ix=k;
		outnum();

		if(k<10)
			outtextxy(x+8,y-15,ci);
		else
			outtextxy(x+4,y-15,ci);

	      }


		x=xx;
		y=yy;



		for(k=1;k<=ny;k++,y+=24)
		{
			ix=k;
			outnum();

			if(k<10)
				outtextxy(x-14,y+8,ci);
			else
				outtextxy(x-19,y+8,ci);

		}
	}


	x=xx;
	y=yy;


	rectangle(x,y,x+(nx*24),y+(ny*24));

	//for the lines inbetween which forms boxes vertical
	for(int i=1;i<=nx;i++)
	{
		line(x+24,y,x+24,y+(ny*24));
		x=x+24;
	}

	//for the lines inbetween which forms boxes horizontal
	x=xx;
	y=yy;

	for(i=1;i<=ny;i++)
	{
		line(x,y+24,x+(nx*24),y+24);
		y=y+24;
	}

	//smallest boxes
	 setcolor(RED);
	 x=xx;
	 y=yy;

	 for(int j=1;j<=ny;j++,y+=24)
	 {
	       for(i=1;i<=nx;i++,x+=24)
		 rectangle(x+2,y+2,x+22,y+22);
	      x=xx;
	 }
}

void crossword()
{
 closegraph();
 int gdriver = DETECT, gmode, errorcode;
 initgraph(&gdriver, &gmode, "C:\\turboc3\\bgi");



   setbkcolor(7);

   settextstyle( SANS_SERIF_FONT, HORIZ_DIR, 7);

   setcolor(RED);
   outtextxy(100,180,"CROSS");

   setcolor(BLUE);
   outtextxy(330,180,"WORD");

   settextstyle( SANS_SERIF_FONT, VERT_DIR, 7);

   setcolor(GREEN);
   outtextxy(270,250,"CROSS");

   setcolor(YELLOW);
   outtextxy(270,30,"WORD");

   setcolor(RED);
   circle(310,230,22);

   setcolor(YELLOW);
   circle(310,230,18);

   setcolor(BLUE);
   circle(310,230,14);

   setcolor(GREEN);
   circle(310,230,10);

   setcolor(BROWN);
   circle(310,230,6);

   setcolor(CYAN);
   circle(310,230,2);

   delay(1400);
   randomize();
   for(i=1;i<=30;i++)
   {

	sound(random(15000)+20);
	delay(30);

   }
   nosound();
   closegraph();
}

void text()
{

	setcolor(CYAN);
	settextstyle(GOTHIC_FONT, HORIZ_DIR, 5);
	outtextxy(250,7,"RULES");

	setcolor(GREEN);
	settextstyle(TRIPLEX_FONT, HORIZ_DIR, 3);

	outtextxy(80,100,"To Solve The Puzzle");
	setcolor(RED);

	settextstyle(TRIPLEX_FONT, HORIZ_DIR, 3);
	outtextxy(80,150+50,"For Creating A Puzzle");

}

void rule()//rule select
{
   clearviewport();
   closegraph();
 int gdriver = DETECT, gmode, errorcode;
 initgraph(&gdriver, &gmode, "C:\\turboc3\\bgi");




  level.smartback();
  text();

  char a;
  int ret=1;
  int opt;

		 setcolor(DARKGRAY);
		 level.arrow(370,220);
		 setcolor(WHITE);
		 level.arrow(370,110);
		 ret=1;
  for(;;)
  {
	 a=getch();
	 opt++;

	 if(a==13)
	  break;

	 if(opt%2==0)
	 {
		 setcolor(DARKGRAY);
		 level.arrow(370,110);
		 setcolor(WHITE);
		 level.arrow(370,220);
		 ret=2;
	 }

	 else
	 {
		 setcolor(DARKGRAY);
		 level.arrow(370,220);
		 setcolor(WHITE);
		 level.arrow(370,110);
		 ret=1;
	 }
  }

  if(ret==2)
  {
	clearviewport();



	level.smartback();
	setbkcolor(BLACK);

	settextstyle(GOTHIC_FONT, HORIZ_DIR, 3);
	setcolor(WHITE);
	outtextxy(150,5,"Rules For Creating A Puzzle");

	int space=1;

	gotoxy(2,5);
	cout<<"1. Select the level of the puzzle";

	gotoxy(2,6+space*1);
	cout<<"2. Enter all the answer's in the respective boxes";

	gotoxy(2,7+space*1);
	cout<<"   1) Hit 0 to block a box";

	gotoxy(2,8+space*1);
	cout<<"   2) Follow the cursor to enter letters in the respective boxes";

	gotoxy(2,9+space*1);
	cout<<"   3) Use the numbered arrows to move the cursor";

	gotoxy(2,10+space*2);
	cout<<"3. Enter the total number of across clues";

	gotoxy(2,11+space*3);
	cout<<"4. Enter the clue number";

	gotoxy(2,12+space*4);
	cout<<"5. Enter all the across clues";

	gotoxy(2,13+space*5);
	cout<<"6. Enter the number of letters in the answer";

	gotoxy(2,14+space*6);
	cout<<"7. Enter the total number of down clues";

	gotoxy(2,15+space*7);
	cout<<"8. Enter all the down clues";

	gotoxy(2,16+space*8);
	cout<<"9. Enter the number of letters in the answer";

	gotoxy(2,17+space*9);
	cout<<"10. Enter the total number of down clues";

	gotoxy(2,18+space*10);
	cout<<"11. Enter all the coordinates of the answers";

	getch();
   }

   else
   {

	 clearviewport();


	 level.smartback();
	 setbkcolor(BLACK);

	 settextstyle(GOTHIC_FONT, HORIZ_DIR, 3);
	 setcolor(WHITE);
	 outtextxy(150,5,"Rules For Playing A Game");

	 gotoxy(2,5);
	 cout<<"1. Select the level you want to play";

	 gotoxy(2,7);
	 cout<<"2. take the help of across and down clues and enter the puzzle";

	 gotoxy(2,9);
	 cout<<"3. Follow the cursor to enter letters in the respective boxes";

	 gotoxy(2,11);
	 cout<<"4. Use the numbered arrows to move the cursor";

	 gotoxy(2,13);
	 cout<<"5. According to the level you will lose points as you move the cursor simply";

	 gotoxy(2,15);
	 cout<<"6. Hit on number 5 to switch between across and down";

	 gotoxy(2,17);
	 cout<<"7. You can see your R_score and time taken in player details";


	 getch();
   }
}





//DRAWS A BIG BOX BORDER
void bigbox(int n)
{
   closegraph();
 int gdriver = DETECT, gmode, errorcode;
 initgraph(&gdriver, &gmode, "C:\\turboc3\\bgi");


	 int x=2,y=2;


	    if(n==1)
	    setcolor(BLUE);

	    else
	    setcolor(WHITE);

			line(x,y+2.5,x+370+265,y+2.5);
			line(x,y+2.5,x,y+280+194);
			line(x+370+265,y+2.5,x+370+265,y+280+194);
			line(x,y+280+194,x+370+265,y+280+194);

			line(x+3,y+5.5,x+352+15+265,y+5.5);
			line(x+3,y+5.5,x+3,y+227+50+194);
			line(x+352+15+265,y+5.5,x+352+15+265,y+227+50+194);
			line(x+3,y+227+50+194,x+352+15+265,y+227+50+194);

}

void security(char a[33])
{
 closegraph();
 int gdriver = DETECT, gmode, errorcode;
 initgraph(&gdriver, &gmode, "C:\\turboc3\\bgi");

char pass[33];
int pass2=1;
while(strcmpi(pass,a)!=0)
{
	clearviewport();

	int x=120,y=100;

 closegraph();
 int gdriver = DETECT, gmode, errorcode;
 initgraph(&gdriver, &gmode, "C:\\turboc3\\bgi");


setcolor(GREEN);
outtextxy(x,y,"-------------------------------------------------");
x=120;
y=350;
outtextxy(x,y,"-------------------------------------------------");
x=x+130;
y=120;
setcolor(RED);
outtextxy(x,y,"Security Check");
x=236;
y=160;
outtextxy(x,y,"Username : Raghul");
y=180;
outtextxy(x,y,"Password : ");
x=236;
y=240;
outtextxy(x,y,"Default : 1234567");
x=180;
y=290;
outtextxy(x,y,"The Password Is Not Case Sensitive");
x=140;
y=320;
outtextxy(x,y,"Backspace will be considered as a Character");

x=318;
y=180;

for(int pas=0;pas<=33;pas++)
{
     pass[pas]=getch();

     if(pass[pas]==13)
	break;
     x=x+7;
     outtextxy(x,y,"*");
}
pass[pas]='\0';
clearviewport();


	if((strcmp(pass,a)!=0)&&(pass2<=3))
	{
		     /*	closegraph();
			int gdriver = DETECT, gmode, errorcode;
			initgraph(&gdriver, &gmode, "c:\\TC\\bgi");
		     */
			int x=120,y=100;

			char iq;

			setcolor(WHITE);
			x=x+15;
			y=y+15;

			line(x,y+2.5,x+355,y+2.5);
			line(x,y+2.5,x,y+230);
			line(x+355,y+2.5,x+355,y+230);
			line(x,y+230,x+355,y+230);

			line(x+3,y+5.5,x+352,y+5.5);
			line(x+3,y+5.5,x+3,y+227);
			line(x+352,y+5.5,x+352,y+227);
			line(x+3,y+227,x+352,y+227);

			setcolor(RED);
			settextstyle(TRIPLEX_FONT, HORIZ_DIR, 3);
			outtextxy(x+100,y+13,"Access Denied");
			settextstyle(GOTHIC_FONT, HORIZ_DIR, 4);
			outtextxy(x+7,y+92,"Wrong Password Entered");
			settextstyle(TRIPLEX_FONT, HORIZ_DIR, 2);
			outtextxy(x+95,y+190,"/3 Chances over");

			if(pass2==1)
			outtextxy(x+85,y+190,"1");
			else if(pass2==2)
			outtextxy(x+85,y+190,"2");
			else
			outtextxy(x+85,y+190,"3");

			sound(2000);
			delay(500);
			nosound();
			pass2++;
			getch();
	}

	else if((strcmpi(pass,a)!=0)&&(pass2>3))
	{
			clearviewport();
			int color=0;
			closegraph();
			for(;;)
			{
				textcolor(color);
				cprintf("\n\nHey, you are not Raghul");
				getch();
				color++;
			}
	}
	}
}


void welcome()
{
	 clearviewport();
	 closegraph();
	 int gdriver = DETECT, gmode, errorcode;
	 initgraph(&gdriver, &gmode, "C:\\turboc3\\bgi");

	setbkcolor(WHITE);
	colors colors;
	colors.intro(4," ",5,getmaxx()/2-30,getmaxy()/2-90,1,0);
	colors.intro(4,"Welcome",9,330,getmaxy()/2-30,1,1);

	delay(2000);
	clearviewport();
}

void outnum()
{
	itoa(ix,ci,10);
}

int menu()
{
	 int gdriver = DETECT, gmode, errorcode;
	 initgraph(&gdriver, &gmode, "C:\\turboc3\\bgi");

	setbkcolor(8);

	level.smartback();

			setcolor(YELLOW);
			settextstyle(GOTHIC_FONT, HORIZ_DIR, 4);
			outtextxy(230,10," Crossword");

			setcolor(LIGHTRED);
			settextstyle(GOTHIC_FONT, HORIZ_DIR, 4);
			outtextxy(205,50,"The Main Menu");

			int sub=30;

			setcolor(BLUE);
			settextstyle(TRIPLEX_FONT, HORIZ_DIR, 2);

			outtextxy(150,200-sub," 2.Create A Puzzle");
			outtextxy(250,260-sub,"4.Player Details");

			setcolor(GREEN);
			settextstyle(TRIPLEX_FONT, HORIZ_DIR, 2);

			outtextxy(110,170-sub,"1.Play A Game");
			outtextxy(190,230-sub,"  3.Reset Software");
			outtextxy(210,290-sub,"         5.Instructions");

			setcolor(RED);
			int rx=270,rx1=350,ry=300,ry1=330;
			rectangle(rx,ry,rx1,ry1);
			rectangle(rx+2.5,ry+2.5,rx1-2.5,ry1-2.5);
			settextstyle(2, HORIZ_DIR, 7);
			outtextxy(rx+9,ry+4,"0:Exit");

			settextstyle(TRIPLEX_FONT, HORIZ_DIR, 1);
			setcolor(WHITE);
			outtextxy(140,340,"Enter  The  Number  Of  Your  Choice");

			char n;
			n=getch();
			int returnmenu;

			if(n=='1')
			{
				settextstyle(TRIPLEX_FONT, HORIZ_DIR, 5);
				setcolor(WHITE);
				outtextxy(310,370,"Play");

			     delay(1000);
			     returnmenu=1;
			}

			else if(n=='2')
			{
				settextstyle(TRIPLEX_FONT, HORIZ_DIR, 5);
				setcolor(WHITE);
				outtextxy(310,370,"Create");

			     delay(1000);
			     returnmenu=2;

			}

			else if(n=='4')
			{
				settextstyle(TRIPLEX_FONT, HORIZ_DIR, 5);
				setcolor(WHITE);
				outtextxy(310,370,"Details");

			     delay(1000);
			     returnmenu=4;

			}

			else if(n=='3')
			{
				settextstyle(TRIPLEX_FONT, HORIZ_DIR, 5);
				setcolor(WHITE);
				outtextxy(300,370,"Reset");

			     delay(1000);
			     returnmenu=3;

			}

			else if(n=='5')
			{
				settextstyle(TRIPLEX_FONT, HORIZ_DIR, 5);
				setcolor(WHITE);
				outtextxy(310,370,"Read Me");

			     delay(1000);
			     returnmenu=5;

			}

			else if(n=='0')
			{
			       settextstyle(TRIPLEX_FONT, HORIZ_DIR, 5);
			       setcolor(WHITE);
			       outtextxy(300,370,"Exit");

			       delay(1000);
			       exit(0);
			       returnmenu=0;

			}

			else
			{
				settextstyle(TRIPLEX_FONT, HORIZ_DIR, 5);
				setcolor(WHITE);
				outtextxy(310,370,"Invalid");

			delay(500);
			menu();
			}

	return returnmenu;
}


void mb(int ny, int nx)
{
   floodfill(xx-3+nx*24,yy-3+ny*24,100);
}

void pbox()
{
	rectangle(5,6,150,getmaxy()-4);
	rectangle(480,6,getmaxx()-3,getmaxy()-3);
	setcolor(WHITE);
	rectangle(8,9,147,getmaxy()-7);
	rectangle(483,9,getmaxx()-6,getmaxy()-6);

	setcolor(BROWN);
	outtextxy(53,13,"ACROSS");
	outtextxy(545,13,"DOWN");
}


float result()
{
fstream person("userinfo.txt",ios::binary|ios::in|ios::out|ios::app);

	int l=0;

	if(lev==1)
	loose_points = no_of_moves/100;
	else if(lev==2)
	loose_points = no_of_moves/40;
	else
	loose_points = no_of_moves/10;


	for(i=0;i<13;i++)
	      for(j=0;j<13;j++)
		    if(x.que[i][j]=='0')
		    {
			    x.sol[i][j]='0';
			    l++;
		    }

	int xi=0;

	for(i=0;i<13;i++)
	  for(j=0;j<13;j++)

	if((x.que[i][j])==(x.sol[i][j]))
	   if(x.que[i][j]!='0')
		 xi++;

	int no_of_ans=169-l;
	float res=(xi*100/no_of_ans)-loose_points;

	user.R_score=res;
	person.write((char*)&user,sizeof(user));

	return res;
}


void load(int level)
{
	    char a;
	    fstream fi;

	    if(level==1)
	    fi.open("cdatae.txt",ios::in);
	    else if(level==2)
	    fi.open("cdatam.txt",ios::in);
	    else
	    fi.open("cdatah.txt",ios::in);

	    for(i=0;i<13;i++)
	     for(j=0;j<13;j++)
	     {
		       fi>>x.que[i][j];  cout<<x.que[i][j];
	     }


		fi>>a; x.noac=innum(a);  cout<<" \nnoac : "<<x.noac;


		//thats it

	   for(i=0;i<x.noac;i++)
	   {
		   fi>>a; x.across[i].cno=innum(a); cout<<" |cno: "<<x.across[i].cno;
		   fi>>a; x.across[i].noc=innum(a); cout<<" |noc: "<<x.across[i].noc;
		   fi>>a; x.across[i].cl=innum(a); cout<<" |cl: "<<x.across[i].cl<<" |c: ";

		   for(j=0;j<x.across[i].cl;j++)
		   {
			   fi>>a;

			  if(a=='!')
			    a=' ';

			   x.across[i].c[j]=a; cout<<x.across[i].c[j];
		   }
	   }

	   int temp=x.noac;

	   fi>>a; x.nodc=innum(a);

	   for(i=0;i<x.nodc;i++)
	   {
		  fi>>a; x.down[i].cno=innum(a); cout<<" |cno: "<<x.down[i].cno;
		  fi>>a; x.down[i].noc=innum(a); cout<<" |noc: "<<x.down[i].noc;
		  fi>>a; x.down[i].cl=innum(a); cout<<" |cl: "<<x.down[i].cl<<" |c: ";

		   for(j=0;j<x.down[i].cl;j++)
		   {
			   fi>>a;

			   if(a=='!')
			     a=' ';

			  x.down[i].c[j]=a; cout<<x.down[i].c[j];
		   }
	   }

	   x.noac=temp;
	   fi>>a; x.num=innum(a);   cout<<"number"<<x.num;

	   for(i=1;i<=x.num;i++)
	   {
	     fi>>a;  x.numco[i][0]=innum(a);      cout<<x.numco[i][0];
	     fi>>a;  x.numco[i][1]=innum(a);       cout<<x.numco[i][1];
	   }

	   fi.close();
}

void main()
{
	int gdriver = DETECT, gmode, errorcode;
	initgraph(&gdriver, &gmode, "C:\\turboc3\\bgi");

	user.readinfo();
	setcolor(WHITE);
	welcome();
	crossword();

	for(;;)
	{
		 fstream Hscore("Hscore.txt",ios::in|ios::out|ios::binary);
		 int finder;
		 Hscore.seekp(0);
		 Hscore>>finder;
		 if(finder<Highscore)
		 {
			Hscore.seekp(0);
			Hscore<<Highscore;
		 }

		int sel=menu();

		if(sel==2)
		{
			p.getpuzzle();
		}
		else if(sel==1)
		{
			lev=level.levsel();
			clearviewport();
			load(lev);

			x.printpuzzle();
			fstream person("userinfo.txt",ios::binary|ios::in|ios::out|ios::app);
			clrscr();
			cout<<"Your result is : "<<result()<<"%";
			//cout<<"\n\nYou Took "<<tim.time()<<" Seconds To Finish";
			//user.Timetaken=tim.time();
			person.write((char*)&user,sizeof(user));
			cout<<"\n\nYou lost "<<loose_points<<" points by moving cursor simply";
			getch();
		}

		else if(sel==3)
		{
			security(user.Password);
			fstream c("userinfo.txt",ios::out|ios::binary);
			c.close();
			fstream c1("Hscore.txt",ios::out|ios::binary);
			c1.seekp(0);
			c1<<0;
			c1.close();
			fstream c2("cdatae.txt",ios::out|ios::binary);
			c.close();
			fstream c3("cdatam.txt",ios::out|ios::binary);
			c.close();
			fstream c4("cdatah.txt",ios::out|ios::binary);
			c.close();
		}

		else if(sel==4)
		{
			user.putuser();
		}

		else if(sel==5)
		{
			rule();
		}
	}
}
